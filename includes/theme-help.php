<div id="theme-help" class="i-am-a-fancy-admin">
	<div class="container">
		<h2>Help</h2>
		
		<?php if ($updated):?>
		<div class="updated fade"><p><strong><?=__( 'Options saved' ); ?></strong></p></div>
		<?php endif; ?>
		
		<div class="sections">
			<ul>
				<li class="section"><a href="#posts">Posts</a></li>
				<li class="section"><a href="#pages">Pages</a></li>
				<li class="section"><a href="#page_sections">Page Sections</a></li>
				<li class="section"><a href="#resource_links">Resource Links</a></li>
				<li class="section"><a href="#shortcodes">Shortcodes</a></li>
			</ul>
		</div>
		<div class="fields">
			<ul>
				
				<li class="section" id="posts">
					<h3>Posts</h3>
					<p>Posts are used on this site to add news snippets to the front page.  They will appear under the "This Just In" section below the home page content.  Posts differ from pages in that they do not describe static content; they are used for more brief, up-to-date announcements.  The two most recent posts will appear on the home page.</p>
					
					<p>To add or edit posts, from the Wordpress admin, hover over "Posts" and click either "Add New" to create a new post, or "All Posts" to browse through existing posts for editing.  Hover over an existing post name and click the "Edit" link to edit it.</p>
					
					<p>Here you'll see a large text editor and multiple boxes labeled "Post Fields", "Featured Image", "Page Links To", and a sidebar with some smaller boxes.  The post content will go in the large text editor; you can use either the visual editor or the HTML editor by clicking the tabs in the top-right-hand corner of the editor, labeled "Visual" and "HTML".</p>
					<p>In the Post Fields box, you'll see a field where you can upload a custom stylesheet.  This is useful if your post requires complex styling that can't be achieved through the Visual editor or through inline styles (i.e., responsive styles.)</p>
					
					<p>You can assign a Featured Image for the post, but it is not actually used automatically anywhere within the template for posts, so it is not necessary.</p>
					
					<p>In the Page Links To box, you can designate whether you want the post to redirect to an external page.  For instance, you could create a post with a small amount of content; when the title of the post is clicked, you'll be redirected to the alternate URL you specify.</p>
					
					<p>In the right-hand sidebar, you'll see a box labeled "Shortcodes".  Here, you can select from a variety of pre-built shortcodes to place in your post content.  Shortcodes are snippets that execute an assigned function, without having to write code or script into your post content.  The primary shortcodes you'll use within this theme are [person-list], [post-type-search], [site-contact-email], and [site-contact-info].  See the Shortcodes Help section for more information.  Note that any HTML tags or special styles generated by these shortcodes will be stripped out from the excerpt displayed on the home page; they will, however, display normally when you click to view the full post.</p>
					
					<p>You can add Categories or Tags to posts if you'd like, but they are not particularly used anywhere within the theme by default.  These are totally optional for posts.</p>
					<p>When you're finished making changes, look for the blue button in the Publish box (in the top-right-hand part of the sidebar.)  Click the button (labeled "Publish" when adding a new post, and "Update" when editing) to save your updates.</p>
				</li>
				
				<li class="section" id="pages">
					<h3>Pages</h3>
					<p>To add or edit pages, from the Wordpress admin, hover over 'Pages', and click 'Add New' to create a new page, or 'All Pages' to browse through existing pages for editing.  Hover over an existing page name and click the 'Edit' link to edit it.</p>

					<p>Here you'll see a large text editor, a large box underneath labeled "Page Fields", and a sidebar with multiple smaller boxes.  The large text editor is where your page's content will go.  You can use either the visual editor or an HTML editor by clicking the tabs in the top-right-hand corner, labeled "Visual" and "HTML".</p>
					
					<p>In the Page Fields box, you can add text for the page's subheader (which appears directly above the page content).  You'll also see a meta field labeled "Post Search Taxonomy Term", and a field labeled "Stylesheet".  A custom stylesheet can be added to the page for easy CSS customizations.  For more information about the "Post Search Taxonomy Term" meta field, see the section of this guide called "Adding and Maintaining Page Sections".</p>
					
					<p>You'll also see a box under Page Fields, labeled "Page Links To".  This allows you to add a redirect for the page; i.e., if you were to link to this page somewhere on the site, clicking the link would redirect to the alternate URL specified here.</p>
					
					<p>In the sidebar, you'll see a box labeled "Page Attributes".  In this box are two drop-down fields: Parent, and Template.  If you're creating a page that is a child of another page (a "subpage"), select its parent from the Parent dropdown.  If this page will not contain a sidebar with the Resource Link search, select "One Column" from the Template dropdown.  By default, pages will use the two-column layout with the sidebar.</p>
					
					<p>You'll also see a box in the sidebar called "Shortcodes".  Here, you can select from a variety of pre-built shortcodes to place in your page content.  Shortcodes are snippets that execute an assigned function, without having to write code or script into your page content.  The primary shortcodes you'll use within this theme are [person-list], [post-type-search], [site-contact-email], and [site-contact-info].  See the Shortcodes Help section for more information.</p>
					
					<p>When you've finished making changes to the page, look for the blue button in the Publish box (in the top-right-hand part of the sidebar.)  Click the button (labeled "Publish" when adding a new post, and "Update" when editing) to save your updates.</p>

				</li>
				
				<li class="section" id="page_sections">
					<h3>Page Sections</h3>
					<p>Page Sections are a custom taxonomy used to define how Resource Links are grouped.  Similar to categories, Page Sections are hierarchical (can have parent/child relationships.)</p>
					
					<p>For organizational purposes, parent Page Sections should be named similarly to the pages on the site with searchable content.  A parent Page Section should only ever have one level of children at a time (no "grandchildren").  See the existing Page Section structure as an example.  Note how any given page with searchable Resource Links should have its own Page Section with child Page Sections to further categorize content.</p>
					
					<p>Page Sections can be added or modified via Resource Links > Page Sections.  You can also add new Page Sections when adding or editing Resource Links in the sidebar of the editor.</p>
					
					<p>If you create a new two-column page and an identically-named Page Section, the newly-created page will automatically use the new Page Section with the same name for the sidebar Resource Link search.  If you can't name them the same, you can copy and page the Page Section's slug into the "Post Search Taxonomy Term" meta field of the page you want to use it for.</p>

				</li>
				
				<li class="section" id="resource_links">
					<h3>Resource Links</h3>
					<p>Links to resources such as Word documents, PDFs, and external sites are saved within your theme as Resource Links.  Resource Links are set up to be searchable within the left-hand sidebar on most pages of the site.  They are categorized by Page Sections.</p>

					<p>To add a new Resource Link, from the Wordpress admin, hover over "Resource Links" and click "Add New".  Add a title in the Title field.  In the Resource Link Fields box, you'll see four fields: URL, Existing Page, File, and Is a Document.  These fields allow you to specify the type of content you'll be linking to.</p>

					<p>You can specify values for all of these fields, but if you do, the URL field will take precedence over any other fields selected, followed by an Existing Page value.  If you upload a file, the other two fields must be left blank.  You'll also notice the "Page Links To" box below the Resource Link Fields box; this will override any of the above settings if an alternate URL is specified here.</p>

					<p>If you're adding a Resource Link that links to some downloadable media, like a Word doc or PDF, be sure to check the Is a Document checkbox.  Checking this box determines whether or not the Resource Link appears on the Documents and Forms page of the site.</p>

					<p>In the right-hand sidebar of the editor, you'll see a box labeled "Tags".  In this box, you can enter keywords that describe the content you're adding.  Any keywords here will be searchable within the Resource Link search; i.e., searching for the word "taxes" will retrieve all Resource Links on that page that include "taxes" in the title as well as Resource Links with a "taxes" tag.</p>

					<p>You'll also notice a "Page Sections" box in the right-hand sidebar.  Here, you'll need to search for the Page Section(s) that the Resource Link should be categorized under.  It is important to only select the child Page Section and not the parent; i.e., a Resource Link that belongs in the Page Section "Collective Bargaining Unit Classes" should only be categorized under "Collective Bargaining Unit Classes", and not "Compensation Information".</p>

					<p>A single resource link can belong to multiple Page Sections; just make sure that, if you're linking to internal page content (i.e. your URL value is "#some-content"), the link is functional on all pages that the Page Section appears on.</p>

					<p>When you're finished making changes, click the "Publish/Edit" button in the "Publish" box.</p>

				</li>
				
				<li class="section" id="shortcodes">
					<?php $custom_post_types = installed_custom_post_types(); ?>
					<h3>Shortcodes</h3>
					
					<p><strong>Note:</strong> While all of these shortcodes are available for your site, you likely won't use some of them.  For instance, if you don't have any images available for your personnel listings, you won't want to use the [ person-picture-list ] shortcode.</p>
					<br/>
					
					<h4>post-type-search</h4>
					<p>Returns a list of posts of a given post type that are searchable through a generated search field.  Posts are searchable by post title and any associated tags.  Available attributes:</p>
					
					<table>
						<tr>
							<th>Name</th>
							<th>Description</th>
							<th>Default Value</th>
							<th>Available Values</th>
						</tr>
						<tr>
							<td>post_type_name</td>
							<td>The post type to retrieve posts for</td>
							<td>post</td>
							<td>
								<ul>
								<?php 
									foreach ($custom_post_types as $custom_post_type) {
										print '<li style="list-style: disc; margin-left: 15px;">'.$custom_post_type->name.'</li>';
									}
								?>
								</ul>
							</td>
						</tr>
						<tr>
							<td>taxonomy</td>
							<td>A taxonomy by which posts can be organized</td>
							<td>category</td>
							<td>Depends on the post type chosen and its available taxonomies</td>
						</tr>
						<tr>
							<td>taxonomy_term</td>
							<td>(Optional) Narrow down post results to a particular taxonomy term and its children; i.e. the category with slug "my-category"</td>
							<td></td>
							<td>Any existing taxonomy term</td>
						</tr>
						<tr>
							<td>meta_key</td>
							<td>(Optional) Specify the name of a meta field; required to use meta_value</td>
							<td></td>
							<td>Depends on the post type chosen and its available meta fields</td>
						</tr>
						<tr>
							<td>meta_value</td>
							<td>(Optional) Specify a value of a meta field to narrow down post results by; a specified meta_key is required.</td>
							<td></td>
							<td></td>
						</tr>
						<tr>
							<td>show_empty_sections</td>
							<td>Determines whether or not empty taxonomy terms will be displayed within the results.</td>
							<td>false</td>
							<td>true, false</td>
						</tr>
						<tr>
							<td>non_alpha_section_name</td>
							<td>Changes the name of the section in which non-alphabetical post results are stored in the alphabetical sort (posts that start with 0-9, etc.)</td>
							<td>Other</td>
							<td></td>
						</tr>
						<tr>
							<td>column_width</td>
							<td>Determines the width of the columns of results.  Intended for use with Bootstrap scaffolding (<a href="http://twitter.github.com/bootstrap/scaffolding.html">see here</a>), but will accept any CSS class name.</td>
							<td>span4</td>
							<td></td>
						</tr>
						<tr>
							<td>column_count</td>
							<td>The number of columns that will be created with the set column_width.</td>
							<td>3</td>
							<td></td>
						</tr>
						<tr>
							<td>order_by</td>
							<td>How to order results by term.  Note that this does not affect alphabetical results.  See <a href="http://codex.wordpress.org/Class_Reference/WP_Query#Order_.26_Orderby_Parameters">WP Query Orderby params</a> in the Wordpress Codex for more information.</td>
							<td>post_title</td>
							<td>
								<ul>
									<li style="list-style: disc; margin-left: 15px;">none</li>
									<li style="list-style: disc; margin-left: 15px;">ID</li>
									<li style="list-style: disc; margin-left: 15px;">author</li>
									<li style="list-style: disc; margin-left: 15px;">title</li>
									<li style="list-style: disc; margin-left: 15px;">name</li>
									<li style="list-style: disc; margin-left: 15px;">date</li>
									<li style="list-style: disc; margin-left: 15px;">modified</li>
									<li style="list-style: disc; margin-left: 15px;">parent</li>
									<li style="list-style: disc; margin-left: 15px;">rand</li>
									<li style="list-style: disc; margin-left: 15px;">menu_order</li>
									<li style="list-style: disc; margin-left: 15px;">meta_value (Requires meta_key attribute to be set)</li>
									<li style="list-style: disc; margin-left: 15px;">meta_value_num (Requires meta_key attribute to be set)</li>
								</ul>
							</td>
						</tr>
						<tr>
							<td>order</td>
							<td>Determine if posts are ordered from ascending to descending, or vice-versa.</td>
							<td>ASC</td>
							<td>ASC (ascending), DESC (descending)</td>
						</tr>
						<tr>
							<td>default_search_text</td>
							<td>Sets the post search field placeholder text.  Note that placeholders are not supported by older browsers (IE 8 and below.)</td>
							<td>Find a (post type name)</td>
							<td></td>
						</tr>
						<tr>
							<td>default_search_label</td>
							<td>Sets the post search field label text</td>
							<td>Find a (post type name)</td>
							<td></td>
						</tr>
					</table>
					
					<p>Examples:</p>
<pre style="white-space: pre-line;"><code># Generate a Resource Link search, as used in the sidebar.
[post-type-search post_type_name="resourcelink" taxonomy="pg_sections" taxonomy_term="my-term" column_width="span3" column_count="1" show_empty_sections=true default_search_text="Find a Resource"]

# Generate a Resource Link search with Resource Links that are designated as Documents (as used on the Documents &amp; Forms page.)
[post-type-search post_type_name="resourcelink" taxonomy="pg_sections" meta_key="resourcelink_is_doc" meta_value="on" default_search_text="Search..." default_search_label="Find a Form"]
</code></pre>
					
					
					
					<h4>(post type)-list</h4>
					<p>Outputs a list of a given post type filtered by arbitrary taxonomies, for 
					example a tag or category.  A default output can be added for when no objects 
					matching the criteria are found.  Available attributes:</p>
					
					<table>
					<tr>
						<th scope="col">Post Type</th>
						<th scope="col">Shortcode Call</th>
						<th scope="col">Available Taxonomy Filters</th>
						<th scope="col">Additional Filters</th>
					</tr>
					
						<?php 
							foreach ($custom_post_types as $custom_post_type) {
						?>
					<tr>
						<td><?=$custom_post_type->singular_name?></td>
						<td><?=$custom_post_type->name?>-list</td>
								
						<td>
							<ul>
							<?php foreach ($custom_post_type->taxonomies as $tax) { 
								switch ($tax) {
									case 'post_tag':
										$tax = 'tags';
										break;
									case 'category':
										$tax = 'categories';
										break;
								}
								
							?>
								<li style="list-style: disc; margin-left: 15px;"><?=$tax?></li>
							</ul>
							<?php } ?>
						</td>
						<td>
							<ul>
							<?php
								// if more than 1 taxonomy is assigned to the post type, show 'join'
								// as being an available filter:
								if (count($custom_post_type->taxonomies) > 1) { 
								?>
									<li style="list-style: disc; margin-left: 15px;">join ('and', 'or')</li>
								<?php
								}
								?>
									<li style="list-style: disc; margin-left: 15px;">limit (number)</li>
							</ul>
						</td>
					</tr>
						<?php }	?>
					
						
				</table>
					
					<p>Examples:</p>
<pre><code># Output a maximum of 5 Documents tagged 'foo' or 'bar', with a default output.
[document-list tags="foo bar" limit=5]No Documents were found.[/document-list]

# Output all People categorized as 'foo'
[person-list categories="foo"]

# Output all People matching the terms in the custom taxonomy named 'org_groups'
[person-list org_groups="term list example"]

# Outputs all People found categorized as 'staff' and in the org_group 'small'.
[person-list limit=5 join="and" categories="staff" org_groups="small"]</code></pre>
				
				
				<?php 
				// As long as the Person post type is active, let's show info for person-picture-list:
				if (post_type_exists('person')) { ?>
				
				<h4>person-picture-list</h4>
				<p>Outputs a list of People with thumbnails, person names, and job titles.  If a person's description is available, a link to the person's profile will be outputted.  If a thumbnail for the person does not exist, a default 'No Photo Available' thumbnail will display.  An optional <strong>row_size</strong> parameter is available to customize the number of rows that will display, in addition to the other filter parameters available to the <strong>person-list</strong> shortcode.</p>
				
				<p>Example:</p>
<pre><code># Output all People (default to 5 columns.)
[person-picture-list]

# Output all People in 4 columns.
[person-picture-list row_size=4]

# Output People in org_group 'staff' in 6 columns.
[person-picture-list org_groups="staff" row_size=6]
</code></pre>

				<?php } ?>
				
				
				<h4>slideshow</h4>
					<p><strong>Note:</strong> While this shortcode is available to use, we recommend writing a slideshow in HTML using the Twitter Bootstrap carousel structure so that your slideshow is responsive (assuming you're comfortable writing HTML.)  See the <a href="http://twitter.github.com/bootstrap/javascript.html#carousel">Bootstrap Docs</a> for more information.</p>
					<p>Create a javascript slideshow of each top level element in the shortcode.  All attributes are optional, but may default to less than ideal values.  Available attributes:</p>
					<table>
						<tr>
							<th scope="col">Name</th>
							<th scope="col">Description</th>
							<th scope="col">Default Value</th>
						</tr>
						<tr>
							<td>height</td>
							<td>CSS height of the outputted slideshow</td>
							<td>100px</td>
						</tr>
						<tr>
							<td>width</td>
							<td>CSS width of the outputted slideshow</th>
							<td>100%</td>
						</tr>
						<tr>
							<td>transition</td>
							<td>Length of transition in milliseconds</td>
							<td>1000</td>
						</tr>
						<tr>
							<td>cycle</td>
							<td>Length of each cycle in milliseconds</td>
							<td>5000</td>
						</tr>
						<tr>
							<td>animation</td>
							<td>The animation type, one of: 'slide' or 'fade'</td>
							<td>slide</td>
						</tr>
					</table>
					<p>Example:
<pre><code>[slideshow height="500px" transition="500" cycle="2000"]
&lt;img src="http://some.image.com" .../&gt;
&lt;div class="robots"&gt;Robots are coming!&lt;/div&gt;
&lt;p&gt;I'm a slide!&lt;/p&gt;
[/slideshow]</code></pre>

				</li>
				
			</ul>
		</div>
	</div>
</div>